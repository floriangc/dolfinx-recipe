{% set version = "2021.1.0" %}
package:
  name: fenics-pkgs
  version: {{ version }}

source:
   - url: https://github.com/FEniCS/ufl/archive/refs/tags/{{ version }}.tar.gz
     sha256: fe1832e2284f9c7fbd60421adc8bef05ba78a92c5ebc016839209fafaaead414
     folder: ufl
   - url: https://github.com/FEniCS/basix/archive/refs/heads/main.zip
     sha256: a7323f67b788f4fcd4dd5530f27d1325b75d43c87a71ebfa66aecbe1a0a52982
     folder: basix
   - url: https://github.com/FEniCS/ffcx/archive/refs/heads/main.zip
     sha256: f50c202b8bb3252a57c3bc5626ecbf664abcf9edd210a54961d3707cb6908340
     folder: ffcx
   - url: https://github.com/FEniCS/dolfinx/archive/f960aa1fd0184e82f34d1cd5bf7a7f581089fd01.zip
     sha256: b67c1f4ffc5f27252de1caa38611e7ca58eb83a58f3345ff1b3cdfd84e15f1ee
     folder: dolfinx

build:
  number: 0
  skip: true  # [win]

outputs:
   - name: fenics-ufl
     version: {{ version }}
     build:
       script: $PYTHON -m pip install --no-deps ./ufl
     requirements:
       host:
         - python=3.8
         - pip
       run:
         - python=3.8
         - setuptools
         - numpy
     test:
       source_files:
         - ufl/test
       requires:
         - pytest
       commands:
         - pytest -v ufl/test

   - name: fenics-libbasix
     version: {{ version }}
     build:
       script: ${RECIPE_DIR}/build-basix.sh
     requirements:
       build:
         - {{ compiler("c") }}
         - {{ compiler('cxx') }}
         - make
         - cmake
       host:
         - xtensor=0.23.4
         - xtensor-blas
         - liblapack
         - libblas
         - xtl=0.7.2
         - libopenblas
       run:
         - xtensor=0.23.4
         - xtensor-blas
         - liblapack
         - libblas
         - xtl=0.7.2

   - name: fenics-basix
     version: {{ version }}
     build:
       script: $PYTHON -m pip install --no-deps ./basix/python
     requirements:
       build:
         - {{ compiler("c") }}
         - {{ compiler('cxx') }}
         - make
         - cmake
         - pybind11
         - python=3.8
       host:
         - python=3.8
         - sympy
         - scipy
         - numpy
         - numba
         - {{ pin_subpackage("fenics-libbasix", exact=True) }}
       run:
         - python=3.8
         - sympy
         - scipy
         - numpy
         - numba
         - {{ pin_subpackage("fenics-libbasix", exact=True) }}
     test:
       source_files:
         - basix/test
       requires:
         - pytest
         - pytest-xdist
       commands:
         - pytest -v  basix/test


   - name: fenics-ffcx
     version: {{ version }}
     build:
       script:
         - $PYTHON -m pip install --no-deps ./ffcx
         - mkdir -p $PREFIX/include
         - cp ffcx/ffcx/codegeneration/*.h $PREFIX/include/
     requirements:
       host:
         - python=3.8
         - pip
       run:
         - {{ compiler("c") }}
         - python=3.8
         - numpy
         - cffi
         - pygraphviz
         - {{ pin_subpackage("fenics-basix", exact=True) }}
         - {{ pin_subpackage("fenics-ufl", exact=True) }}
     test:
       source_files:
         - ffcx/test
       requires:
         - pytest
       commands:
         - pytest -v ffcx/test

   - name: fenics-libdolfinx
     version: {{ version }}
     build:
       script: ${RECIPE_DIR}/build-dolfinx.sh
       {% set mpi_prefix = "mpi_" + mpi %}
     requirements:
       build:
         - {{ compiler("c") }}
         - {{ compiler('cxx') }}
         - make
         - cmake
         - git
       host:
         - libblas
         - libcblas
         - boost-cpp
         - eigen
         - parmetis
         - pkg-config
         - ptscotch
         - suitesparse
         - zlib
         - {{ mpi }}
         - petsc
         - slepc
         - liblapack
         - xtensor=0.23.4
         - xtensor-blas
         - {{ pin_subpackage("fenics-ffcx", exact=True) }}
         # need to list libnetcdf and netcdf-fortran twice to get version
         # pinning from conda_build_config and build pinning from {{ mpi_prefix }}
         - hdf5
         - hdf5 * {{ mpi_prefix }}_*
       run:
         - {{ compiler('cxx') }}
         - eigen
         - mpich
         - parmetis
         - petsc
         - slepc
         - pkgconfig
         - ptscotch
         - suitesparse
         - xtensor
         - xtensor-blas
         - zlib
         - {{ pin_subpackage("fenics-ffcx", exact=True) }}
         - boost-cpp


about:
  home: http://www.fenicsproject.org
  license: LGPL 3.0
  # license_file: dolfin/COPYING.LESSER
  summary: 'FEniCS is a collection of free software for automated, efficient solution of differential equations'

  description: |
    FEniCS is a collection of free software for automated, efficient solution of differential equations
    (<http://fenicsproject.org>). It provides C++ and Python interfaces, and creates effecient solvers via
    expression of finite variational statements in a domain-specific language that are transformed and
    just-in-time compiled into efficient implementations.
  doc_url: http://fenics.readthedocs.io/
  dev_url: https://github.com/FEniCS
