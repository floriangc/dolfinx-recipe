# Remarks:
#   - Make release of basix/ffcx/dolfinx with version 2021.1.0

{% set version = "2021.1.0" %}

package:
  name: fenics-pkgs
  version: {{ version }}

source:
  # - url: https://github.com/FEniCS/ufl/archive/refs/tags/{{ version }}.tar.gz
  #   sha256: fe1832e2284f9c7fbd60421adc8bef05ba78a92c5ebc016839209fafaaead414
  #   folder: ufl
  # - url: https://github.com/FEniCS/basix/archive/refs/heads/main.zip
  #   sha256: 7b2b38ff25f45314e2d7ebc57eb9e8aff1f439257847b276c5dcb2520fbcaf7e
  #   folder: basix
  # - url: https://github.com/FEniCS/ffcx/archive/refs/heads/main.zip
  #   sha256: f50c202b8bb3252a57c3bc5626ecbf664abcf9edd210a54961d3707cb6908340
  #   folder: ffcx
  - url: https://github.com/FEniCS/dolfinx/archive/f4f0da23ac2fbb01a479a6a3dcf1fc0eea7d3c11.zip
    sha256: 25b5ae43bc663974bb9a811610d57c2dbd0120a858c882e48fe3ad2bdcf57bf6
    folder: dolfinx
build:
  number: 0
  skip: true  # [win]

outputs:
  # - name: fenics-ufl
  #   build:
  #     script: $PYTHON -m pip install --no-deps ./ufl
  #   requirements:
  #     host:
  #       - python
  #       - pip
  #     run:
  #       - python
  #       - setuptools
  #       - numpy
  #   test:
  #     source_files:
  #       - ufl/test
  #     requires:
  #       - pytest
  #     commands:
  #       - pytest -v ufl/test
  #
  # - name: fenics-basix
  #   build:
  #     script: ${RECIPE_DIR}/build-basix.sh
  #   requirements:
  #     build:
  #       - {{ compiler("c") }}
  #       - {{ compiler('cxx') }}
  #       - make
  #       - cmake
  #     host:
  #       - python
  #       - sympy
  #       - numpy
  #       - xtensor=0.23.4
  #       - xtensor-blas
  #       - pybind11
  #       - liblapack
  #       - libblas
  #       - xtl=0.7.2
  #     run:
  #       - python
  #       - sympy
  #       - numpy
  #       - xtensor=0.23.4
  #       - xtensor-blas
  #       - pybind11
  #       - liblapack
  #       - libblas
  #       - xtl=0.7.2
  #   test:
  #     source_files:
  #       - basix/test
  #     requires:
  #       - pytest
  #     commands:
  #       - pytest -v basix/test
  #
  # - name: fenics-ffcx
  #   build:
  #     script:
  #       - $PYTHON -m pip install --no-deps ./ffcx
  #       - mkdir -p $PREFIX/include
  #       - cp ffcx/ffcx/codegeneration/*.h $PREFIX/include/
  #   requirements:
  #     host:
  #       - python
  #       - pip
  #     run:
  #       - {{ compiler("c") }} # [linux]
  #       - python
  #       - numpy
  #       - cffi
  #       - pygraphviz
  #       - {{ pin_subpackage("fenics-basix", exact=True) }}
  #       - {{ pin_subpackage("fenics-ufl", exact=True) }}
  #   test:
  #     source_files:
  #       - ffcx/test
  #     requires:
  #       - pytest
  #     commands:
  #       - pytest -v ffcx/test

  - name: fenics-libdolfinx
    build:
      script: ${RECIPE_DIR}/build-dolfinx.sh
      {% set mpi_prefix = "mpi_" + mpi %}
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler('cxx') }}
        - make
        - cmake
        - git
      host:
        - python
        - libblas
        - libcblas
        - boost-cpp
        - eigen
        - parmetis
        - pkg-config
        - ptscotch
        - suitesparse
        - zlib
        - {{ mpi }}
        - petsc
        - slepc
        - liblapack
        - xtensor
        - xtensor-blas
        - fenics-ffcx ={{ version }}
        # need to list libnetcdf and netcdf-fortran twice to get version
        # pinning from conda_build_config and build pinning from {{ mpi_prefix }}
        - hdf5
        - hdf5 * {{ mpi_prefix }}_*
      run:
        - python
        - {{ compiler('cxx') }}
        - eigen
        - mpich
        - parmetis
        - petsc
        - slepc
        - pkgconfig
        - ptscotch
        - suitesparse
        - xtensor
        - xtensor-blas
        - zlib
        - fenics-ffcx ={{ version }}
        - boost-cpp


about:
  home: http://www.fenicsproject.org
  license: LGPL 3.0
  # license_file: dolfin/COPYING.LESSER
  summary: 'FEniCS is a collection of free software for automated, efficient solution of differential equations'

  description: |
    FEniCS is a collection of free software for automated, efficient solution of differential equations
    (<http://fenicsproject.org>). It provides C++ and Python interfaces, and creates effecient solvers via
    expression of finite variational statements in a domain-specific language that are transformed and
    just-in-time compiled into efficient implementations.
  doc_url: http://fenics.readthedocs.io/
  dev_url: https://github.com/FEniCS
